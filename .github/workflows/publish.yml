name: Publish Prebuilt CI Environment

on:
  push:
    branches: ["main"]
  schedule:
    # Fetch latest packages for prebuilt CI runtime image weekly
    - cron: "0 * * * 6"

env:
  PKR_VAR_registry: ghcr.io
  PKR_VAR_repository: ghcr.io/${{ github.repository }}
  PKR_VAR_username: ${{ github.actor }}
  PKR_VAR_password: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate dependent package version
        run: |
          echo "PKR_VAR_packer_version=\"$(curl https://api.github.com/repos/hashicorp/packer/releases/latest -s | jq .name -r | sed s/v//)\"" >> $GITHUB_ENV
          echo "PKR_VAR_terraform_version=\"$(curl https://api.github.com/repos/hashicorp/terraform/releases/latest -s | jq .name -r | sed s/v//)\"" >> $GITHUB_ENV
          echo "PKR_VAR_cfssl_version=\"$(curl https://api.github.com/repos/cloudflare/cfssl/releases/latest -s | jq .name -r | sed s/v//)\"" >> $GITHUB_ENV
          echo "PKR_VAR_nomad_version=\"$(curl https://api.github.com/repos/hashicorp/nomad/releases/latest -s | jq .name -r | sed s/v//)\"" >> $GITHUB_ENV
          echo "PKR_VAR_consul_version=\"$(curl https://api.github.com/repos/hashicorp/consul/releases/latest -s | jq .name -r | sed s/v//)\"" >> $GITHUB_ENV
          echo "PKR_VAR_vault_version=\"$(curl https://api.github.com/repos/hashicorp/vault/releases/latest -s | jq .name -r | sed s/v//)\"" >> $GITHUB_ENV
          echo "PKR_VAR_tailscale_version=\"$(curl https://api.github.com/repos/tailscale/tailscale/releases/latest -s | jq .tag_name -r | sed s/v//)\"" >> $GITHUB_ENV

      - name: Initializes Packer
        run: packer init .

      - name: Validate packer configurations
        run: packer validate -syntax-only .

      - name: Run packer build
        run: |
          packer build -color=false -on-error=abort -only 'docker.base' .
          packer build -color=false -on-error=abort -only 'docker.packer' .
          packer build -color=false -on-error=abort -only 'docker.terraform' .
          packer build -color=false -on-error=abort -only 'docker.provisioner' .
